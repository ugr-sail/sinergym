name: Pull request workflows
on: pull_request

# pwd: /home/runner/work/sinergym/sinergym

jobs:
  autopep8-isort-check:
    runs-on: ubuntu-24.04
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ vars.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
          
      - name: Install autopep8 and isort
        run: poetry install --no-interaction --only format

      - name: autopep8 check
        id: autopep8
        run: poetry run autopep8 --exit-code --recursive --diff --aggressive --aggressive .
        continue-on-error: true

      - name: isort check
        id: isort
        run: poetry run isort --check-only --diff .
        continue-on-error: true

      - name: Fail if autopep8/isort found diffs
        if: steps.autopep8.outcome != 'success' || steps.isort.outcome != 'success'
        run: |
          echo "Error detected in code formatting (autopep8 and/or isort)."
          exit 1

  type-check:
    runs-on: ubuntu-24.04
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ vars.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
          
      - name: Install pytype
        run: poetry install --no-interaction --only typing

      - name: Check pytype
        run: poetry run pytype -d import-error sinergym/

  documentation-check:
    runs-on: ubuntu-24.04
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ vars.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      
      - name: Verify documentation update
        uses: dorny/paths-filter@v3
        id: verify-documentation-update
        with:
          filters: |
            doc:
              - 'docs/source/**'

      - name: Install dependencies
        if: steps.verify-documentation-update.outputs.doc == 'true'
        run: |
          sudo apt install python3-enchant
          sudo apt install pandoc
          poetry install --no-interaction --only main,doc
      
      - name: Check build docs
        if: steps.verify-documentation-update.outputs.doc == 'true'
        run: poetry run sphinx-build -M html docs/source docs/build

      - name: Check sphinx spelling
        if: steps.verify-documentation-update.outputs.doc == 'true'
        run: poetry run sphinx-build -M spelling docs/source docs/build

  tests:
    name: build container and execute pytest
    runs-on: ubuntu-24.04
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build the latest Docker image
        run: docker build . --file Dockerfile --build-arg SINERGYM_EXTRAS="test" --tag pullrequest/sinergym:latest

      - name: Execute tests from container
        run: docker run -t pullrequest/sinergym:latest /bin/bash -c 'pytest -vv --cov sinergym tests/'
