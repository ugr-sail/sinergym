# -------------------------------------------------------------------------- #
#                          Sinergym package metadata                         #
# -------------------------------------------------------------------------- #
[tool.poetry]

package-mode = true
name = "sinergym"

version = "3.9.3"
description = "Sinergym provides a Gymnasium-based interface to interact with building simulations. This allows control in simulation time through custom controllers, including reinforcement learning agents"
license = "MIT"

authors = [
    "Alejandro Campoy Nieves <alejandroac79@gmail.com>",
    "Antonio Manjavacas",
    "Javier Jiménez",
    "Miguel Molina",
    "Juan Gómez"
]
# maintainers = [...

# README file(s) are used as the package description
readme = ["README.md", "INSTALL.md", "CODE_OF_CONDUCT.md", "LICENSE"]

homepage = "https://github.com/ugr-sail/sinergym"
repository = "https://github.com/ugr-sail/sinergym"
documentation = "https://ugr-sail.github.io/sinergym"

# Keywords (translated to tags on the package index)
keywords = [
    "reinforcement-learning",
    "buildings",
    "simulation",
    "control",
    "reinforcement-learning-environments",
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

# Include (equivalent to MANIFEST.in)
include = ["sinergym/version.txt", "sinergym/data/**"]
# Part of proyect you want to exclude in packaging
# exclude = []

# -------------------------------------------------------------------------- #
#                              Main dependencies                             #
# -------------------------------------------------------------------------- #
[tool.poetry.dependencies] # Main group

# Compatible Python versions
python = "^3.12"
gymnasium = ">=1.2.0"
numpy = ">=2.3.2"
pandas = ">=2.3.1"
eppy = ">=0.5.63"
tqdm = ">=4.67.1"
xlsxwriter = ">=3.2.5"
epw = ">=1.2.dev2"
pyyaml = ">=6.0.2"

# Extra dependencies (optional)
pytest = { version = ">=8.4.1", optional = true }
pytest-cov = { version = ">=6.2.1", optional = true }
pytest-xdist = { version = ">=3.8.0", optional = true }
coverage = { version = ">=7.10.4", optional = true }
stable-baselines3 = { version = ">=2.7.0", optional = true }
wandb = { version = ">=0.21.1", optional = true }
IPython = { version = ">=9.4.0", optional = true }
google-api-python-client = { version = ">=2.179.0", optional = true }
oauth2client = { version = ">=4.1.3", optional = true }
google-cloud-storage = { version = ">=3.3.0", optional = true }

# -------------------------------------------------------------------------- #
#                        Group dependencies (develop)                        #
# -------------------------------------------------------------------------- #
[tool.poetry.group.format.dependencies]
black = ">=25.1.0"
ruff = ">=0.12.9"
pipdeptree = ">=2.28.0"

[tool.poetry.group.typing.dependencies]
pyright = ">=1.1.403"

[tool.poetry.group.test.dependencies]
pytest = ">=8.4.1"
pytest-cov = ">=6.2.1"
pytest-xdist = ">=3.8.0"
coverage = ">=7.10.4"
wandb = ">=0.21.1"

[tool.poetry.group.doc.dependencies]
sphinx = ">=8.2.3"
sphinx-rtd-theme = ">=3.0.2"
sphinxcontrib-spelling = ">=8.0.1"
sphinxcontrib-jquery = ">=4.1"
sphinx-multitoc-numbering = ">=0.1.3"
sphinx-multiversion = ">=0.2.4"
pyenchant = ">=3.2.2"
nbsphinx = ">=0.9.6"
nbsphinx_link = ">=1.3.1"
mock = ">=5.2.0"
IPython = ">=9.4.0"

[tool.poetry.group.ipython.dependencies]
IPython = ">=9.4.0"

[tool.poetry.group.drl.dependencies]
stable-baselines3 = ">=2.4.0"

[tool.poetry.group.platforms.dependencies]
wandb = ">=0.21.1"

[tool.poetry.group.gcloud.dependencies]
google-api-python-client = ">=2.179.0"
oauth2client = ">=4.1.3"
google-cloud-storage = ">=3.3.0"

# Entry points 
# [tool.poetry.scripts]
# sinergym = "sinergym.cli:main"

# -------------------------------------------------------------------------- #
#                        Define extras for pip install                       #
# -------------------------------------------------------------------------- #

[tool.poetry.extras]
test = ["pytest", "pytest-cov", "pytest-xdist", "coverage", "wandb"]
drl = ["stable-baselines3", "wandb"]
notebooks = ["IPython"]
gcloud = ["google-api-python-client", "oauth2client", "google-cloud-storage"]
extras = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "coverage",
    "stable-baselines3",
    "wandb",
    "IPython",
    "google-api-python-client",
    "oauth2client",
    "google-cloud-storage",
]

# -------------------------------------------------------------------------- #
#                           third parties settings                           #
# -------------------------------------------------------------------------- #
[tool.pyright]
include = ["sinergym", "scripts", "tests", "docs", "examples"]
typeCheckingMode = "basic"
# Only type-checking, for the rest use black and ruff
reportMissingImports = false
reportUnusedImport = false
reportMissingModuleSource = false
reportMissingTypeStubs = false
reportOptionalMemberAccess = false
reportAttributeAccessIssue = false
reportUnusedVariable = true

[tool.black]
line-length = 88
target-version = ["py312"]
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | build
  | dist
  | venv
)/
'''

[tool.ruff]
# Apply autofix where possible
fix = false
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    ".mypy_cache",
    ".pytest_cache"
]

[tool.ruff.lint]
select = [
    # "F",  # Pyflakes: unused variables/imports, simple errors
    "I",  # Isort-like: import order
    # "E",  # Pycodestyle: minor style errors
]

# -------------------------------------------------------------------------- #
#                         Poetry build configuration                         #
# -------------------------------------------------------------------------- #
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
